{
  "title": "Algorithms: Problem Solving Step-by-Step",
  "sections": [
    {
      "type": "section",
      "title": "What is an Algorithm?",
      "content": [
        {
          "type": "paragraph",
          "text": "An algorithm is a clear, step-by-step procedure to solve a problem. It describes what to do, not necessarily how a computer executes it. Good algorithms are correct, efficient, and easy to understand."
        },
        {
          "type": "keypoints",
          "points": [
            "Algorithm = step-by-step instructions",
            "Same input → same output (deterministic)",
            "Measured by correctness, clarity, and efficiency"
          ]
        }
      ]
    },
    {
      "type": "section",
      "title": "Example: Find the Maximum Number",
      "content": [
        {
          "type": "paragraph",
          "text": "Given a list of numbers, we want to find the largest value."
        },
        {
          "type": "example",
          "title": "Pseudocode",
          "content": [
            {
              "type": "code",
              "language": "pseudocode",
              "code": "max <- first number\nfor each number in the list:\n  if number > max:\n    max <- number\noutput max"
            }
          ]
        },
        {
          "type": "keypoints",
          "points": [
            "Initialize with a sensible starting value",
            "Update the current best when a better candidate appears",
            "One pass through the list → linear time O(n)"
          ]
        }
      ]
    },
    {
      "type": "section",
      "title": "Algorithm Qualities",
      "content": [
        {
          "type": "paragraph",
          "text": "We often compare algorithms by how much time and memory they use. Big-O notation helps us describe how running time grows with input size."
        },
        {
          "type": "example",
          "title": "Common Complexities",
          "content": [
            {
              "type": "list",
              "ordered": false,
              "items": [
                "O(1) — Constant time",
                "O(log n) — Logarithmic time (binary search)",
                "O(n) — Linear time (one pass)",
                "O(n log n) — Efficient sorting (merge/quick sort average)",
                "O(n^2) — Nested loops (simple comparison sort)"
              ]
            }
          ]
        }
      ]
    }
  ]
}